{
  "usage/index.html": {
    "href": "usage/index.html",
    "title": "Basics | API Documentation",
    "keywords": "Basics The purpose of the libarary is to provide simple and concise extension methods that allow arguments and state to be validated efficiently at runtime."
  },
  "index.html": {
    "href": "index.html",
    "title": "OpenCollar.Extensions.IO | API Documentation",
    "keywords": "OpenCollar.Extensions.IO The purpose of the libarary is to provide simple and concise extension methods that allow arguments and state to be validated efficiently at runtime. NuGet Package Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Extensions.IO/ Project Latest Build: Source Code on GitHub Issue Tracking on GitHub Documentation on GitHub Pages Usage The purpose of the libarary is to provide simple and concise extension methods that allow arguments and state to be validated efficiently at runtime. Related Projects OpenCollar.Extensions OpenCollar.Extensions.ApplicationInsights OpenCollar.Extensions.Collections OpenCollar.Extensions.Configuraton OpenCollar.Extensions.Environment OpenCollar.Extensions.IO OpenCollar.Extensions.Logging OpenCollar.Extensions.Security OpenCollar.Extensions.Threading OpenCollar.Extensions.Validation"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenCollar.Extensions.IO | API Documentation",
    "keywords": "OpenCollar.Extensions.IO Tools and extensions for the IO namespace. NuGet Package Installation Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Extensions.IO/"
  },
  "api/OpenCollar.Extensions.IO.BlobKey.html": {
    "href": "api/OpenCollar.Extensions.IO.BlobKey.html",
    "title": "Class BlobKey | API Documentation",
    "keywords": "Class BlobKey A class that represents a key for large binary objects in a compact and compute efficient way. This class cannot be inherited. Inheritance System.Object BlobKey Implements System.IEquatable < BlobKey > System.IComparable < BlobKey > System.IComparable Namespace : OpenCollar.Extensions.IO Assembly : OpenCollar.Extensions.IO.dll Syntax public sealed class BlobKey : IEquatable<BlobKey>, IComparable<BlobKey>, IComparable Constructors | Improve this Doc View Source BlobKey(Byte[]) Initializes a new instance of the BlobKey class. Declaration public BlobKey([CanBeNull] byte[] blob) Parameters Type Name Description System.Byte [] blob A byte array containing the binary data to be represented. | Improve this Doc View Source BlobKey(Stream) Initializes a new instance of the BlobKey class. Declaration public BlobKey([CanBeNull] Stream blob) Parameters Type Name Description System.IO.Stream blob A stream containing the binary data to be represented. If the stream supports seek then this will be unchanged following construction. Methods | Improve this Doc View Source CompareTo(BlobKey) Compares the current object with another object of the same type. Declaration public int CompareTo(BlobKey other) Parameters Type Name Description BlobKey other An object to compare with this object. Returns Type Description System.Int32 A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other . Greater than zero This object is greater than other . | Improve this Doc View Source CompareTo(Object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj An object to compare with this instance. Returns Type Description System.Int32 A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than obj . Zero This instance is equal to obj . Greater than zero This instance is greater than obj . Exceptions Type Condition System.ArgumentException obj is not the same type as this instance. | Improve this Doc View Source Equals(BlobKey) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(BlobKey other) Parameters Type Name Description BlobKey other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified System.Object is equal to the current System.Object . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The System.Object to compare with the current System.Object . Returns Type Description System.Boolean true if the specified System.Object is equal to the current System.Object ; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Serves as a hash function for a particular type. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current System.Object . Overrides System.Object.GetHashCode() Operators | Improve this Doc View Source Equality(BlobKey, BlobKey) Implements the equality operator. Declaration public static bool operator ==(BlobKey left, BlobKey right) Parameters Type Name Description BlobKey left The left operand. BlobKey right The right operand. Returns Type Description System.Boolean The result of the operation. | Improve this Doc View Source GreaterThan(BlobKey, BlobKey) Implements the greater-than operator. Declaration public static bool operator>(BlobKey left, BlobKey right) Parameters Type Name Description BlobKey left The left operand. BlobKey right The right operand. Returns Type Description System.Boolean The result of the operation. | Improve this Doc View Source GreaterThanOrEqual(BlobKey, BlobKey) Implements the greater-than-or-equals operator. Declaration public static bool operator >=(BlobKey left, BlobKey right) Parameters Type Name Description BlobKey left The left operand. BlobKey right The right operand. Returns Type Description System.Boolean The result of the operation. | Improve this Doc View Source Inequality(BlobKey, BlobKey) Implements the inequality operator. Declaration public static bool operator !=(BlobKey left, BlobKey right) Parameters Type Name Description BlobKey left The left operand. BlobKey right The right operand. Returns Type Description System.Boolean The result of the operation. | Improve this Doc View Source LessThan(BlobKey, BlobKey) Implements the less-than operator. Declaration public static bool operator <(BlobKey left, BlobKey right) Parameters Type Name Description BlobKey left The left operand. BlobKey right The right operand. Returns Type Description System.Boolean The result of the operation. | Improve this Doc View Source LessThanOrEqual(BlobKey, BlobKey) Implements the less-than-or-equals operator. Declaration public static bool operator <=(BlobKey left, BlobKey right) Parameters Type Name Description BlobKey left The left operand. BlobKey right The right operand. Returns Type Description System.Boolean The result of the operation. Implements System.IEquatable<T> System.IComparable<T> System.IComparable"
  },
  "api/OpenCollar.Extensions.IO.html": {
    "href": "api/OpenCollar.Extensions.IO.html",
    "title": "Namespace OpenCollar.Extensions.IO | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.IO Classes BlobKey A class that represents a key for large binary objects in a compact and compute efficient way. This class cannot be inherited. CompressionExtensions Extension methods that consume or return compressed data. Crc32 Methods supporting the generation of CRC-32 checksums (as used in ZIP files). StreamExtensions Extensions to the class."
  },
  "api/OpenCollar.Extensions.IO.StreamExtensions.html": {
    "href": "api/OpenCollar.Extensions.IO.StreamExtensions.html",
    "title": "Class StreamExtensions | API Documentation",
    "keywords": "Class StreamExtensions Extensions to the class. Inheritance System.Object StreamExtensions Namespace : OpenCollar.Extensions.IO Assembly : OpenCollar.Extensions.IO.dll Syntax public static class StreamExtensions Methods | Improve this Doc View Source ReadAll(Stream) Reads all the data in a stream and returns it as a System.Byte array. Declaration [NotNull] public static byte[] ReadAll([CanBeNull] this Stream source) Parameters Type Name Description System.IO.Stream source The stream from which to read. If this is null an empty array is returned. Returns Type Description System.Byte [] An array containing the data read from the source stream. This will never be null even if the stream is."
  },
  "api/OpenCollar.Extensions.IO.CompressionExtensions.html": {
    "href": "api/OpenCollar.Extensions.IO.CompressionExtensions.html",
    "title": "Class CompressionExtensions | API Documentation",
    "keywords": "Class CompressionExtensions Extension methods that consume or return compressed data. Inheritance System.Object CompressionExtensions Namespace : OpenCollar.Extensions.IO Assembly : OpenCollar.Extensions.IO.dll Syntax public static class CompressionExtensions Methods | Improve this Doc View Source GetCompressed(Byte[]) Given a byte array returns an array of bytes containing the same data compress with GZIP. Declaration [ContractAnnotation(\"null=>null;notnull=>notnull\")] public static byte[] GetCompressed([CanBeNull] this byte[] data) Parameters Type Name Description System.Byte [] data The bytes to compress. Returns Type Description System.Byte [] The data given, compressed using GZIP, or null if data was null . | Improve this Doc View Source GetDecompressed(Byte[]) Decompresses the compressed data given. It is assumed that the data was compressed using the GetCompressed(Byte[]) method (which uses GZIP). Declaration [ContractAnnotation(\"null=>null;notnull=>notnull\")] public static byte[] GetDecompressed([CanBeNull] this byte[] compressedData) Parameters Type Name Description System.Byte [] compressedData The compressed data to decompress. Returns Type Description System.Byte [] The data given, decompressed using GZIP, or null if compressedData was null ."
  },
  "api/OpenCollar.Extensions.IO.Crc32.html": {
    "href": "api/OpenCollar.Extensions.IO.Crc32.html",
    "title": "Class Crc32 | API Documentation",
    "keywords": "Class Crc32 Methods supporting the generation of CRC-32 checksums (as used in ZIP files). Inheritance System.Object Crc32 Namespace : OpenCollar.Extensions.IO Assembly : OpenCollar.Extensions.IO.dll Syntax public static class Crc32 Remarks Generate a table for a byte-wise 32-bit CRC calculation on the polynomial: x^32+x^26+x^23+x^22+x^16+x^12+x^11+x^10+x^8+x^7+x^5+x^4+x^2+x+1. Polynomials over GF(2) are represented in binary, one bit per coefficient, with the lowest powers in the most significant bit. Then adding polynomials is just exclusive-or, and multiplying a polynomial by x is a right shift by one. If we call the above polynomial p, and represent a byte as the polynomial q, also with the lowest power in the most significant bit (so the byte 0xb1 is the polynomial x^7+x^3+x+1), then the CRC is (q*x^32) mod p, where a mod b means the remainder after dividing a by b. This calculation is done using the shift-register method of multiplying and taking the remainder. The register is initialized to zero, and for each incoming bit, x^32 is added mod p to the register if the bit is a one (where x^32 mod p is p+x^32 = x^26+...+1), and the register is multiplied mod p by x (which is shifting right by one and adding x^32 mod p if the bit shifted out is a one). We start with the highest power (least significant bit) of q and repeat for all eight bits of q. The table is simply the CRC of all possible eight bit values. This is all the information needed to generate CRC's on data a byte at a time for all combinations of CRC register values and incoming bytes. Methods | Improve this Doc View Source GetCrc(Byte[]) Gets the CRC checksum for a byte array. Declaration public static long GetCrc([NotNull] this byte[] buffer) Parameters Type Name Description System.Byte [] buffer The buffer from which to read data. Returns Type Description System.Int64 The resulting for the data given. Exceptions Type Condition System.ArgumentNullException buffer is null . | Improve this Doc View Source GetCrc(Stream, Int32) Gets the CRC checksum for a stream. Declaration public static long GetCrc([NotNull] this Stream stream, int blockSize) Parameters Type Name Description System.IO.Stream stream The stream from which to read data. System.Int32 blockSize The size of the data blocks to read. Returns Type Description System.Int64 The resulting for the stream given. Exceptions Type Condition System.ArgumentNullException stream is null . System.ArgumentOutOfRangeException blockSize must be greater than zero."
  }
}